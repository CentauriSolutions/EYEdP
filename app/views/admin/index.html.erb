<!-- <h1><%= @models.klass.name.pluralize %> <%= link_to "New #{ @models.klass.name}", [:new, :admin, @models.klass.name.underscore.gsub('/', '_').to_sym], class: "btn btn-sm btn-dark", data: { title: 'New User', remote: url_for([:new, :admin, @models.klass.name.underscore.gsub('/', '_').to_sym, :format => "js"]), toggle: "modal", target: "#edit-modal", hotkey: 'n' } %></h1> -->
<div class="row mb-5">
  <div class="col-md-6"></div>
  <div class="col-md-6 ml-auto">

    <%- if filter_whitelist.any? %>
      <p class="small">Search</p>
    <%- end %>
    <div class="float-right">
      <%= link_to "New #{ @models.klass.name}", [:new, :admin, @models.klass.name.underscore.gsub('/', '_').to_sym], class: "btn btn-sm btn-dark", data: { title: 'New User', remote: url_for([:new, :admin, @models.klass.name.underscore.gsub('/', '_').to_sym, :format => "js"]), toggle: "modal", target: "#edit-modal", hotkey: 'n' } %>
    </div>
    <%- if filter_whitelist.any? %>
      <div class="" style="width: auto; overflow: auto">
        <%= form_tag '', method: :get, class: 'form form-inline search' do %>
           <div class="right-inner-addon" style="width: 100%">
             <%= fa_icon('search') %>
             <%= text_field_tag :search, params[:search], value: params[:search], placeholder: filter_whitelist.map(&:titlecase).join(' or '), class: 'form-control', style:"width: 100%" %>
           </div>
        <%- end %>
      </div>
    <%- end %>
  </div>
</div>
<div class="row">
  <table class="table table-striped">
    <thead class="admin">
      <tr>
        <th></th>
        <%- model_attributes.each do |attr_name| %>
          <th>
            <%= attr_name.gsub('_', ' ') %>
            <%- if sort_whitelist.include? attr_name %>
              <%= link_to fa_icon("sort-asc"), current_page_params.merge(sort_by: attr_name, sort_dir: 'asc') %>
              <%= link_to fa_icon("sort-desc"), current_page_params.merge(sort_by: attr_name, sort_dir: 'desc') %>
            <%- end %>
          </th>
        <%- end %>
      </tr>
    </thead>

    <tbody>
      <% @models.each do |model| %>
        <tr>
          <td><nobr>
          <%= link_to fa_icon('pencil', title: 'Edit'), [:edit, :admin, model], class: "btn btn-mini", data: { title: model.to_s, remote: url_for([:edit, :admin, model, :format => "js"]), toggle: "modal", target: "#edit-modal"} %>
          <%- if can_destroy? %>
            <%= link_to fa_icon('trash-o', title: "Delete"), [:admin, model], method: :delete,  class: "btn btn-mini", data: { confirm: 'Are you sure?' } %>
          <%- end %>
            </nobr></td>
          <%- model_attributes.each do |attr_name| %>
          <%= render partial: 'model_field', locals: { model: model, attr_name: attr_name } %>
          <%- end %>
        </tr>
      <% end %>
    </tbody>
  </table>
  <%= will_paginate @models, renderer: WillPaginate::ActionView::BootstrapLinkRenderer %>
</div>
<%- content_for :end_html do %>
<div class="modal fade" id="edit-modal" tabindex="-1"
    role="dialog" aria-labelledby="edit-modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
              <div class="container-fluid">
                <div class="row">
                  <h3 class="modal-title" id="edit-modalLabel"></h3>
                  <button type="button" class="close" data-dismiss="modal"
                      aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="row">
                  <p class="small">User info and setup.</p>
                </div>
              </div>
            </div>
            <div class="modal-body">
                <p>
                    <!-- <img alt="loading" src="resources/img/ajax-loader.gif"> -->
                </p>
            </div>
        </div>
    </div>
</div>
<%- end %>
<%- content_for :local_js do %>
<script type="text/javascript">
$('body').on('click', '[data-toggle="modal"]', function(){
  // e.preventDefault();
  var link = $(this);
  // var href = link[0].href;
  $(link.data("target") + ' .modal-header .modal-title').text(link.data("title"))
  $(link.data("target")+' .modal-body').load(link.data('remote'), () => {
    var element = document.querySelector("#model_form");
    element.addEventListener("ajax:success", (event) => {
      location.reload();
    });
  });
  $(link.data("target")).modal('show');

  // $('#model_form').
  return false;
});
// $( document ).ready(function() {
//   // location.reload();
//   // debugger
//   // const element = document.querySelector("#edit-model");
//   $('#edit-model').on("ajax:success", (event) => {
//     debugger
//     location.reload();
//   });
//   // element.addEventListener("ajax:error", () => {
//   //   element.insertAdjacentHTML("beforeend", "<p>ERROR</p>");
//   // });
// });

</script>
<%- end %>
